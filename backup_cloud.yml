---
- name: Backup remoto desde servidor Linux (cloud)
  hosts: localhost
  gather_facts: yes
  vars:
    target_host: srv_cloud
    backup_src_paths:
      - "/root"
      - "/home/chichadepardos"
      - "/var/lib/docker"
      - "/etc/docker"
      - "/etc/containers"
    backup_dest_base: "/mnt/backups/{{ target_host }}/{{ ansible_date_time.date }}"
    compressed_file_path: "/mnt/backups/{{ target_host }}_{{ ansible_date_time.date }}.tar.gz"

  tasks:
    - name: Obtener remote_user y remote_host desde hostvars
      set_fact:
        remote_user_var: "{{ hostvars[target_host]['remote_user'] }}"
        remote_host: "{{ hostvars[target_host]['remote_host'] }}"

    - name: Crear carpeta base para backups
      ansible.builtin.file:
        path: "{{ backup_dest_base }}"
        state: directory
        mode: '0755'
        recurse: yes

    - name: Ejecutar backup rsync por cada ruta
      ansible.builtin.command: >
        rsync -aAXv --delete
        -e "ssh -o StrictHostKeyChecking=no"
        --rsync-path='sudo -n rsync'
        {{ remote_user_var }}@{{ remote_host }}:{{ item }}
        {{ backup_dest_base }}/{{ item | basename }}
      loop: "{{ backup_src_paths }}"

    - name: Comprimir backup en tar.gz y eliminar carpeta sin comprimir
      ansible.builtin.archive:
        path: "{{ backup_dest_base }}"
        dest: "{{ compressed_file_path }}"
        format: gz
        remove: yes

    - name: Subir backup comprimido a Google Drive
      ansible.builtin.command: >
        rclone copy "{{ compressed_file_path }}" "gdrive:BACKUP/"
